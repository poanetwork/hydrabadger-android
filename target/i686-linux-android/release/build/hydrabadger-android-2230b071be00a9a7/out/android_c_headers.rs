/* automatically generated by rust-bindgen */

pub const __GNUC_VA_LIST : u32 = 1 ; pub const __ANDROID_API_FUTURE__ : u32 = 10000 ; pub const __ANDROID_API__ : u32 = 10000 ; pub const __ANDROID_API_G__ : u32 = 9 ; pub const __ANDROID_API_I__ : u32 = 14 ; pub const __ANDROID_API_J__ : u32 = 16 ; pub const __ANDROID_API_J_MR1__ : u32 = 17 ; pub const __ANDROID_API_J_MR2__ : u32 = 18 ; pub const __ANDROID_API_K__ : u32 = 19 ; pub const __ANDROID_API_L__ : u32 = 21 ; pub const __ANDROID_API_L_MR1__ : u32 = 22 ; pub const __ANDROID_API_M__ : u32 = 23 ; pub const __ANDROID_API_N__ : u32 = 24 ; pub const __ANDROID_API_N_MR1__ : u32 = 25 ; pub const __ANDROID_API_O__ : u32 = 26 ; pub const __ANDROID_API_O_MR1__ : u32 = 27 ; pub const __ANDROID_API_P__ : u32 = 28 ; pub const __BIONIC__ : u32 = 1 ; pub const __WORDSIZE : u32 = 32 ; pub const __bos_level : u32 = 0 ; pub const INT8_MIN : i32 = -128 ; pub const INT8_MAX : u32 = 127 ; pub const INT_LEAST8_MIN : i32 = -128 ; pub const INT_LEAST8_MAX : u32 = 127 ; pub const INT_FAST8_MIN : i32 = -128 ; pub const INT_FAST8_MAX : u32 = 127 ; pub const UINT8_MAX : u32 = 255 ; pub const UINT_LEAST8_MAX : u32 = 255 ; pub const UINT_FAST8_MAX : u32 = 255 ; pub const INT16_MIN : i32 = -32768 ; pub const INT16_MAX : u32 = 32767 ; pub const INT_LEAST16_MIN : i32 = -32768 ; pub const INT_LEAST16_MAX : u32 = 32767 ; pub const UINT16_MAX : u32 = 65535 ; pub const UINT_LEAST16_MAX : u32 = 65535 ; pub const INT32_MIN : i32 = -2147483648 ; pub const INT32_MAX : u32 = 2147483647 ; pub const INT_LEAST32_MIN : i32 = -2147483648 ; pub const INT_LEAST32_MAX : u32 = 2147483647 ; pub const INT_FAST32_MIN : i32 = -2147483648 ; pub const INT_FAST32_MAX : u32 = 2147483647 ; pub const UINT32_MAX : u32 = 4294967295 ; pub const UINT_LEAST32_MAX : u32 = 4294967295 ; pub const UINT_FAST32_MAX : u32 = 4294967295 ; pub const SIG_ATOMIC_MAX : u32 = 2147483647 ; pub const SIG_ATOMIC_MIN : i32 = -2147483648 ; pub const WINT_MAX : u32 = 4294967295 ; pub const WINT_MIN : u32 = 0 ; pub const INTPTR_MIN : i32 = -2147483648 ; pub const INTPTR_MAX : u32 = 2147483647 ; pub const UINTPTR_MAX : u32 = 4294967295 ; pub const PTRDIFF_MIN : i32 = -2147483648 ; pub const PTRDIFF_MAX : u32 = 2147483647 ; pub const SIZE_MAX : u32 = 4294967295 ; pub const JNI_FALSE : u32 = 0 ; pub const JNI_TRUE : u32 = 1 ; pub const JNI_VERSION_1_1 : u32 = 65537 ; pub const JNI_VERSION_1_2 : u32 = 65538 ; pub const JNI_VERSION_1_4 : u32 = 65540 ; pub const JNI_VERSION_1_6 : u32 = 65542 ; pub const JNI_OK : u32 = 0 ; pub const JNI_ERR : i32 = -1 ; pub const JNI_EDETACHED : i32 = -2 ; pub const JNI_EVERSION : i32 = -3 ; pub const JNI_ENOMEM : i32 = -4 ; pub const JNI_EEXIST : i32 = -5 ; pub const JNI_EINVAL : i32 = -6 ; pub const JNI_COMMIT : u32 = 1 ; pub const JNI_ABORT : u32 = 2 ; pub type va_list = __builtin_va_list ; pub type __gnuc_va_list = __builtin_va_list ; pub type wchar_t = :: std :: os :: raw :: c_int ; pub type __int8_t = :: std :: os :: raw :: c_schar ; pub type __uint8_t = :: std :: os :: raw :: c_uchar ; pub type __int16_t = :: std :: os :: raw :: c_short ; pub type __uint16_t = :: std :: os :: raw :: c_ushort ; pub type __int32_t = :: std :: os :: raw :: c_int ; pub type __uint32_t = :: std :: os :: raw :: c_uint ; pub type __int64_t = :: std :: os :: raw :: c_longlong ; pub type __uint64_t = :: std :: os :: raw :: c_ulonglong ; pub type __intptr_t = :: std :: os :: raw :: c_int ; pub type __uintptr_t = :: std :: os :: raw :: c_uint ; pub type int_least8_t = i8 ; pub type uint_least8_t = u8 ; pub type int_least16_t = i16 ; pub type uint_least16_t = u16 ; pub type int_least32_t = i32 ; pub type uint_least32_t = u32 ; pub type int_least64_t = i64 ; pub type uint_least64_t = u64 ; pub type int_fast8_t = i8 ; pub type uint_fast8_t = u8 ; pub type int_fast64_t = i64 ; pub type uint_fast64_t = u64 ; pub type int_fast16_t = i32 ; pub type uint_fast16_t = u32 ; pub type int_fast32_t = i32 ; pub type uint_fast32_t = u32 ; pub type uintmax_t = u64 ; pub type intmax_t = i64 ; pub type jboolean = u8 ; pub type jbyte = i8 ; pub type jchar = u16 ; pub type jshort = i16 ; pub type jint = i32 ; pub type jlong = i64 ; pub type jfloat = f32 ; pub type jdouble = f64 ; pub type jsize = jint ; pub type jobject = * mut :: std :: os :: raw :: c_void ; pub type jclass = jobject ; pub type jstring = jobject ; pub type jarray = jobject ; pub type jobjectArray = jarray ; pub type jbooleanArray = jarray ; pub type jbyteArray = jarray ; pub type jcharArray = jarray ; pub type jshortArray = jarray ; pub type jintArray = jarray ; pub type jlongArray = jarray ; pub type jfloatArray = jarray ; pub type jdoubleArray = jarray ; pub type jthrowable = jobject ; pub type jweak = jobject ; # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct _jfieldID { _unused : [ u8 ; 0 ] , } impl Clone for _jfieldID { fn clone ( & self ) -> Self { * self } } pub type jfieldID = * mut _jfieldID ; # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct _jmethodID { _unused : [ u8 ; 0 ] , } impl Clone for _jmethodID { fn clone ( & self ) -> Self { * self } } pub type jmethodID = * mut _jmethodID ; # [ repr ( C ) ] # [ derive ( Copy ) ] pub union jvalue { pub z : jboolean , pub b : jbyte , pub c : jchar , pub s : jshort , pub i : jint , pub j : jlong , pub f : jfloat , pub d : jdouble , pub l : jobject , _bindgen_union_align : [ u32 ; 2usize ] , } # [ test ] fn bindgen_test_layout_jvalue ( ) { assert_eq ! ( :: std :: mem :: size_of :: < jvalue > ( ) , 8usize , concat ! ( "Size of: " , stringify ! ( jvalue ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < jvalue > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( jvalue ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . z as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( z ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . b as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( b ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . c as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( c ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . s as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( s ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . i as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( i ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . j as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( j ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . f as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( f ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . d as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( d ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < jvalue > ( ) ) ) . l as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( jvalue ) , "::" , stringify ! ( l ) ) ) ; } impl Clone for jvalue { fn clone ( & self ) -> Self { * self } } pub const jobjectRefType_JNIInvalidRefType : jobjectRefType = 0 ; pub const jobjectRefType_JNILocalRefType : jobjectRefType = 1 ; pub const jobjectRefType_JNIGlobalRefType : jobjectRefType = 2 ; pub const jobjectRefType_JNIWeakGlobalRefType : jobjectRefType = 3 ; pub type jobjectRefType = u32 ; # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JNINativeMethod { pub name : * const :: std :: os :: raw :: c_char , pub signature : * const :: std :: os :: raw :: c_char , pub fnPtr : * mut :: std :: os :: raw :: c_void , } # [ test ] fn bindgen_test_layout_JNINativeMethod ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JNINativeMethod > ( ) , 12usize , concat ! ( "Size of: " , stringify ! ( JNINativeMethod ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JNINativeMethod > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JNINativeMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeMethod > ( ) ) ) . name as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeMethod ) , "::" , stringify ! ( name ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeMethod > ( ) ) ) . signature as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeMethod ) , "::" , stringify ! ( signature ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeMethod > ( ) ) ) . fnPtr as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeMethod ) , "::" , stringify ! ( fnPtr ) ) ) ; } impl Clone for JNINativeMethod { fn clone ( & self ) -> Self { * self } } pub type C_JNIEnv = * const JNINativeInterface ; pub type JNIEnv = * const JNINativeInterface ; pub type JavaVM = * const JNIInvokeInterface ; # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JNINativeInterface { pub reserved0 : * mut :: std :: os :: raw :: c_void , pub reserved1 : * mut :: std :: os :: raw :: c_void , pub reserved2 : * mut :: std :: os :: raw :: c_void , pub reserved3 : * mut :: std :: os :: raw :: c_void , pub GetVersion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv ) -> jint > , pub DefineClass : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * const :: std :: os :: raw :: c_char , arg3 : jobject , arg4 : * const jbyte , arg5 : jsize ) -> jclass > , pub FindClass : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * const :: std :: os :: raw :: c_char ) -> jclass > , pub FromReflectedMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jmethodID > , pub FromReflectedField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jfieldID > , pub ToReflectedMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : jboolean ) -> jobject > , pub GetSuperclass : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass ) -> jclass > , pub IsAssignableFrom : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jclass ) -> jboolean > , pub ToReflectedField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jboolean ) -> jobject > , pub Throw : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jthrowable ) -> jint > , pub ThrowNew : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const :: std :: os :: raw :: c_char ) -> jint > , pub ExceptionOccurred : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv ) -> jthrowable > , pub ExceptionDescribe : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv ) > , pub ExceptionClear : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv ) > , pub FatalError : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * const :: std :: os :: raw :: c_char ) > , pub PushLocalFrame : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jint ) -> jint > , pub PopLocalFrame : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jobject > , pub NewGlobalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jobject > , pub DeleteGlobalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) > , pub DeleteLocalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) > , pub IsSameObject : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jobject ) -> jboolean > , pub NewLocalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jobject > , pub EnsureLocalCapacity : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jint ) -> jint > , pub AllocObject : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass ) -> jobject > , pub NewObject : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jobject > , pub NewObjectV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jobject > , pub NewObjectA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jobject > , pub GetObjectClass : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jclass > , pub IsInstanceOf : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass ) -> jboolean > , pub GetMethodID : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const :: std :: os :: raw :: c_char , arg4 : * const :: std :: os :: raw :: c_char ) -> jmethodID > , pub CallObjectMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jobject > , pub CallObjectMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jobject > , pub CallObjectMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jobject > , pub CallBooleanMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jboolean > , pub CallBooleanMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jboolean > , pub CallBooleanMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jboolean > , pub CallByteMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jbyte > , pub CallByteMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jbyte > , pub CallByteMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jbyte > , pub CallCharMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jchar > , pub CallCharMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jchar > , pub CallCharMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jchar > , pub CallShortMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jshort > , pub CallShortMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jshort > , pub CallShortMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jshort > , pub CallIntMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jint > , pub CallIntMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jint > , pub CallIntMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jint > , pub CallLongMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jlong > , pub CallLongMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jlong > , pub CallLongMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jlong > , pub CallFloatMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jfloat > , pub CallFloatMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jfloat > , pub CallFloatMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jfloat > , pub CallDoubleMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) -> jdouble > , pub CallDoubleMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) -> jdouble > , pub CallDoubleMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) -> jdouble > , pub CallVoidMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , ... ) > , pub CallVoidMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : va_list ) > , pub CallVoidMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jmethodID , arg4 : * const jvalue ) > , pub CallNonvirtualObjectMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jobject > , pub CallNonvirtualObjectMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jobject > , pub CallNonvirtualObjectMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jobject > , pub CallNonvirtualBooleanMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jboolean > , pub CallNonvirtualBooleanMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jboolean > , pub CallNonvirtualBooleanMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jboolean > , pub CallNonvirtualByteMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jbyte > , pub CallNonvirtualByteMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jbyte > , pub CallNonvirtualByteMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jbyte > , pub CallNonvirtualCharMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jchar > , pub CallNonvirtualCharMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jchar > , pub CallNonvirtualCharMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jchar > , pub CallNonvirtualShortMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jshort > , pub CallNonvirtualShortMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jshort > , pub CallNonvirtualShortMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jshort > , pub CallNonvirtualIntMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jint > , pub CallNonvirtualIntMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jint > , pub CallNonvirtualIntMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jint > , pub CallNonvirtualLongMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jlong > , pub CallNonvirtualLongMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jlong > , pub CallNonvirtualLongMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jlong > , pub CallNonvirtualFloatMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jfloat > , pub CallNonvirtualFloatMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jfloat > , pub CallNonvirtualFloatMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jfloat > , pub CallNonvirtualDoubleMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) -> jdouble > , pub CallNonvirtualDoubleMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) -> jdouble > , pub CallNonvirtualDoubleMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) -> jdouble > , pub CallNonvirtualVoidMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , ... ) > , pub CallNonvirtualVoidMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : va_list ) > , pub CallNonvirtualVoidMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jclass , arg4 : jmethodID , arg5 : * const jvalue ) > , pub GetFieldID : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const :: std :: os :: raw :: c_char , arg4 : * const :: std :: os :: raw :: c_char ) -> jfieldID > , pub GetObjectField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jobject > , pub GetBooleanField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jboolean > , pub GetByteField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jbyte > , pub GetCharField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jchar > , pub GetShortField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jshort > , pub GetIntField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jint > , pub GetLongField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jlong > , pub GetFloatField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jfloat > , pub GetDoubleField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID ) -> jdouble > , pub SetObjectField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jobject ) > , pub SetBooleanField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jboolean ) > , pub SetByteField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jbyte ) > , pub SetCharField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jchar ) > , pub SetShortField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jshort ) > , pub SetIntField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jint ) > , pub SetLongField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jlong ) > , pub SetFloatField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jfloat ) > , pub SetDoubleField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject , arg3 : jfieldID , arg4 : jdouble ) > , pub GetStaticMethodID : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const :: std :: os :: raw :: c_char , arg4 : * const :: std :: os :: raw :: c_char ) -> jmethodID > , pub CallStaticObjectMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jobject > , pub CallStaticObjectMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jobject > , pub CallStaticObjectMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jobject > , pub CallStaticBooleanMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jboolean > , pub CallStaticBooleanMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jboolean > , pub CallStaticBooleanMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jboolean > , pub CallStaticByteMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jbyte > , pub CallStaticByteMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jbyte > , pub CallStaticByteMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jbyte > , pub CallStaticCharMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jchar > , pub CallStaticCharMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jchar > , pub CallStaticCharMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jchar > , pub CallStaticShortMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jshort > , pub CallStaticShortMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jshort > , pub CallStaticShortMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jshort > , pub CallStaticIntMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jint > , pub CallStaticIntMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jint > , pub CallStaticIntMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jint > , pub CallStaticLongMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jlong > , pub CallStaticLongMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jlong > , pub CallStaticLongMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jlong > , pub CallStaticFloatMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jfloat > , pub CallStaticFloatMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jfloat > , pub CallStaticFloatMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jfloat > , pub CallStaticDoubleMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) -> jdouble > , pub CallStaticDoubleMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) -> jdouble > , pub CallStaticDoubleMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) -> jdouble > , pub CallStaticVoidMethod : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , ... ) > , pub CallStaticVoidMethodV : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : va_list ) > , pub CallStaticVoidMethodA : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jmethodID , arg4 : * const jvalue ) > , pub GetStaticFieldID : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const :: std :: os :: raw :: c_char , arg4 : * const :: std :: os :: raw :: c_char ) -> jfieldID > , pub GetStaticObjectField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jobject > , pub GetStaticBooleanField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jboolean > , pub GetStaticByteField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jbyte > , pub GetStaticCharField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jchar > , pub GetStaticShortField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jshort > , pub GetStaticIntField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jint > , pub GetStaticLongField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jlong > , pub GetStaticFloatField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jfloat > , pub GetStaticDoubleField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID ) -> jdouble > , pub SetStaticObjectField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jobject ) > , pub SetStaticBooleanField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jboolean ) > , pub SetStaticByteField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jbyte ) > , pub SetStaticCharField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jchar ) > , pub SetStaticShortField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jshort ) > , pub SetStaticIntField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jint ) > , pub SetStaticLongField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jlong ) > , pub SetStaticFloatField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jfloat ) > , pub SetStaticDoubleField : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : jfieldID , arg4 : jdouble ) > , pub NewString : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * const jchar , arg3 : jsize ) -> jstring > , pub GetStringLength : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring ) -> jsize > , pub GetStringChars : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * mut jboolean ) -> * const jchar > , pub ReleaseStringChars : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * const jchar ) > , pub NewStringUTF : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * const :: std :: os :: raw :: c_char ) -> jstring > , pub GetStringUTFLength : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring ) -> jsize > , pub GetStringUTFChars : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * mut jboolean ) -> * const :: std :: os :: raw :: c_char > , pub ReleaseStringUTFChars : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * const :: std :: os :: raw :: c_char ) > , pub GetArrayLength : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jarray ) -> jsize > , pub NewObjectArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize , arg3 : jclass , arg4 : jobject ) -> jobjectArray > , pub GetObjectArrayElement : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobjectArray , arg3 : jsize ) -> jobject > , pub SetObjectArrayElement : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobjectArray , arg3 : jsize , arg4 : jobject ) > , pub NewBooleanArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jbooleanArray > , pub NewByteArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jbyteArray > , pub NewCharArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jcharArray > , pub NewShortArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jshortArray > , pub NewIntArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jintArray > , pub NewLongArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jlongArray > , pub NewFloatArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jfloatArray > , pub NewDoubleArray : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jsize ) -> jdoubleArray > , pub GetBooleanArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbooleanArray , arg3 : * mut jboolean ) -> * mut jboolean > , pub GetByteArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbyteArray , arg3 : * mut jboolean ) -> * mut jbyte > , pub GetCharArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jcharArray , arg3 : * mut jboolean ) -> * mut jchar > , pub GetShortArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jshortArray , arg3 : * mut jboolean ) -> * mut jshort > , pub GetIntArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jintArray , arg3 : * mut jboolean ) -> * mut jint > , pub GetLongArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jlongArray , arg3 : * mut jboolean ) -> * mut jlong > , pub GetFloatArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jfloatArray , arg3 : * mut jboolean ) -> * mut jfloat > , pub GetDoubleArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jdoubleArray , arg3 : * mut jboolean ) -> * mut jdouble > , pub ReleaseBooleanArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbooleanArray , arg3 : * mut jboolean , arg4 : jint ) > , pub ReleaseByteArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbyteArray , arg3 : * mut jbyte , arg4 : jint ) > , pub ReleaseCharArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jcharArray , arg3 : * mut jchar , arg4 : jint ) > , pub ReleaseShortArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jshortArray , arg3 : * mut jshort , arg4 : jint ) > , pub ReleaseIntArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jintArray , arg3 : * mut jint , arg4 : jint ) > , pub ReleaseLongArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jlongArray , arg3 : * mut jlong , arg4 : jint ) > , pub ReleaseFloatArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jfloatArray , arg3 : * mut jfloat , arg4 : jint ) > , pub ReleaseDoubleArrayElements : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jdoubleArray , arg3 : * mut jdouble , arg4 : jint ) > , pub GetBooleanArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbooleanArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jboolean ) > , pub GetByteArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbyteArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jbyte ) > , pub GetCharArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jcharArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jchar ) > , pub GetShortArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jshortArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jshort ) > , pub GetIntArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jintArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jint ) > , pub GetLongArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jlongArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jlong ) > , pub GetFloatArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jfloatArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jfloat ) > , pub GetDoubleArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jdoubleArray , arg3 : jsize , arg4 : jsize , arg5 : * mut jdouble ) > , pub SetBooleanArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbooleanArray , arg3 : jsize , arg4 : jsize , arg5 : * const jboolean ) > , pub SetByteArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jbyteArray , arg3 : jsize , arg4 : jsize , arg5 : * const jbyte ) > , pub SetCharArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jcharArray , arg3 : jsize , arg4 : jsize , arg5 : * const jchar ) > , pub SetShortArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jshortArray , arg3 : jsize , arg4 : jsize , arg5 : * const jshort ) > , pub SetIntArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jintArray , arg3 : jsize , arg4 : jsize , arg5 : * const jint ) > , pub SetLongArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jlongArray , arg3 : jsize , arg4 : jsize , arg5 : * const jlong ) > , pub SetFloatArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jfloatArray , arg3 : jsize , arg4 : jsize , arg5 : * const jfloat ) > , pub SetDoubleArrayRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jdoubleArray , arg3 : jsize , arg4 : jsize , arg5 : * const jdouble ) > , pub RegisterNatives : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass , arg3 : * const JNINativeMethod , arg4 : jint ) -> jint > , pub UnregisterNatives : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jclass ) -> jint > , pub MonitorEnter : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jint > , pub MonitorExit : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jint > , pub GetJavaVM : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * mut * mut JavaVM ) -> jint > , pub GetStringRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : jsize , arg4 : jsize , arg5 : * mut jchar ) > , pub GetStringUTFRegion : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : jsize , arg4 : jsize , arg5 : * mut :: std :: os :: raw :: c_char ) > , pub GetPrimitiveArrayCritical : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jarray , arg3 : * mut jboolean ) -> * mut :: std :: os :: raw :: c_void > , pub ReleasePrimitiveArrayCritical : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jarray , arg3 : * mut :: std :: os :: raw :: c_void , arg4 : jint ) > , pub GetStringCritical : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * mut jboolean ) -> * const jchar > , pub ReleaseStringCritical : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jstring , arg3 : * const jchar ) > , pub NewWeakGlobalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jweak > , pub DeleteWeakGlobalRef : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jweak ) > , pub ExceptionCheck : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv ) -> jboolean > , pub NewDirectByteBuffer : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : * mut :: std :: os :: raw :: c_void , arg3 : jlong ) -> jobject > , pub GetDirectBufferAddress : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> * mut :: std :: os :: raw :: c_void > , pub GetDirectBufferCapacity : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jlong > , pub GetObjectRefType : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JNIEnv , arg2 : jobject ) -> jobjectRefType > , } # [ test ] fn bindgen_test_layout_JNINativeInterface ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JNINativeInterface > ( ) , 932usize , concat ! ( "Size of: " , stringify ! ( JNINativeInterface ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JNINativeInterface > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JNINativeInterface ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . reserved0 as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( reserved0 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . reserved1 as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( reserved1 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . reserved2 as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( reserved2 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . reserved3 as * const _ as usize } , 12usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( reserved3 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetVersion as * const _ as usize } , 16usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetVersion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . DefineClass as * const _ as usize } , 20usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( DefineClass ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . FindClass as * const _ as usize } , 24usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( FindClass ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . FromReflectedMethod as * const _ as usize } , 28usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( FromReflectedMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . FromReflectedField as * const _ as usize } , 32usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( FromReflectedField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ToReflectedMethod as * const _ as usize } , 36usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ToReflectedMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetSuperclass as * const _ as usize } , 40usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetSuperclass ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . IsAssignableFrom as * const _ as usize } , 44usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( IsAssignableFrom ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ToReflectedField as * const _ as usize } , 48usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ToReflectedField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . Throw as * const _ as usize } , 52usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( Throw ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ThrowNew as * const _ as usize } , 56usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ThrowNew ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ExceptionOccurred as * const _ as usize } , 60usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ExceptionOccurred ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ExceptionDescribe as * const _ as usize } , 64usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ExceptionDescribe ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ExceptionClear as * const _ as usize } , 68usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ExceptionClear ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . FatalError as * const _ as usize } , 72usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( FatalError ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . PushLocalFrame as * const _ as usize } , 76usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( PushLocalFrame ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . PopLocalFrame as * const _ as usize } , 80usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( PopLocalFrame ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewGlobalRef as * const _ as usize } , 84usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewGlobalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . DeleteGlobalRef as * const _ as usize } , 88usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( DeleteGlobalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . DeleteLocalRef as * const _ as usize } , 92usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( DeleteLocalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . IsSameObject as * const _ as usize } , 96usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( IsSameObject ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewLocalRef as * const _ as usize } , 100usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewLocalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . EnsureLocalCapacity as * const _ as usize } , 104usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( EnsureLocalCapacity ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . AllocObject as * const _ as usize } , 108usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( AllocObject ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewObject as * const _ as usize } , 112usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewObject ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewObjectV as * const _ as usize } , 116usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewObjectV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewObjectA as * const _ as usize } , 120usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewObjectA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetObjectClass as * const _ as usize } , 124usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetObjectClass ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . IsInstanceOf as * const _ as usize } , 128usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( IsInstanceOf ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetMethodID as * const _ as usize } , 132usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetMethodID ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallObjectMethod as * const _ as usize } , 136usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallObjectMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallObjectMethodV as * const _ as usize } , 140usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallObjectMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallObjectMethodA as * const _ as usize } , 144usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallObjectMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallBooleanMethod as * const _ as usize } , 148usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallBooleanMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallBooleanMethodV as * const _ as usize } , 152usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallBooleanMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallBooleanMethodA as * const _ as usize } , 156usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallBooleanMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallByteMethod as * const _ as usize } , 160usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallByteMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallByteMethodV as * const _ as usize } , 164usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallByteMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallByteMethodA as * const _ as usize } , 168usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallByteMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallCharMethod as * const _ as usize } , 172usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallCharMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallCharMethodV as * const _ as usize } , 176usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallCharMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallCharMethodA as * const _ as usize } , 180usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallCharMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallShortMethod as * const _ as usize } , 184usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallShortMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallShortMethodV as * const _ as usize } , 188usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallShortMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallShortMethodA as * const _ as usize } , 192usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallShortMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallIntMethod as * const _ as usize } , 196usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallIntMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallIntMethodV as * const _ as usize } , 200usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallIntMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallIntMethodA as * const _ as usize } , 204usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallIntMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallLongMethod as * const _ as usize } , 208usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallLongMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallLongMethodV as * const _ as usize } , 212usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallLongMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallLongMethodA as * const _ as usize } , 216usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallLongMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallFloatMethod as * const _ as usize } , 220usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallFloatMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallFloatMethodV as * const _ as usize } , 224usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallFloatMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallFloatMethodA as * const _ as usize } , 228usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallFloatMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallDoubleMethod as * const _ as usize } , 232usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallDoubleMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallDoubleMethodV as * const _ as usize } , 236usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallDoubleMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallDoubleMethodA as * const _ as usize } , 240usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallDoubleMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallVoidMethod as * const _ as usize } , 244usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallVoidMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallVoidMethodV as * const _ as usize } , 248usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallVoidMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallVoidMethodA as * const _ as usize } , 252usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallVoidMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualObjectMethod as * const _ as usize } , 256usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualObjectMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualObjectMethodV as * const _ as usize } , 260usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualObjectMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualObjectMethodA as * const _ as usize } , 264usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualObjectMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualBooleanMethod as * const _ as usize } , 268usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualBooleanMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualBooleanMethodV as * const _ as usize } , 272usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualBooleanMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualBooleanMethodA as * const _ as usize } , 276usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualBooleanMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualByteMethod as * const _ as usize } , 280usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualByteMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualByteMethodV as * const _ as usize } , 284usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualByteMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualByteMethodA as * const _ as usize } , 288usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualByteMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualCharMethod as * const _ as usize } , 292usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualCharMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualCharMethodV as * const _ as usize } , 296usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualCharMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualCharMethodA as * const _ as usize } , 300usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualCharMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualShortMethod as * const _ as usize } , 304usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualShortMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualShortMethodV as * const _ as usize } , 308usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualShortMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualShortMethodA as * const _ as usize } , 312usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualShortMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualIntMethod as * const _ as usize } , 316usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualIntMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualIntMethodV as * const _ as usize } , 320usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualIntMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualIntMethodA as * const _ as usize } , 324usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualIntMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualLongMethod as * const _ as usize } , 328usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualLongMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualLongMethodV as * const _ as usize } , 332usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualLongMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualLongMethodA as * const _ as usize } , 336usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualLongMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualFloatMethod as * const _ as usize } , 340usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualFloatMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualFloatMethodV as * const _ as usize } , 344usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualFloatMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualFloatMethodA as * const _ as usize } , 348usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualFloatMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualDoubleMethod as * const _ as usize } , 352usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualDoubleMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualDoubleMethodV as * const _ as usize } , 356usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualDoubleMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualDoubleMethodA as * const _ as usize } , 360usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualDoubleMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualVoidMethod as * const _ as usize } , 364usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualVoidMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualVoidMethodV as * const _ as usize } , 368usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualVoidMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallNonvirtualVoidMethodA as * const _ as usize } , 372usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallNonvirtualVoidMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetFieldID as * const _ as usize } , 376usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetFieldID ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetObjectField as * const _ as usize } , 380usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetObjectField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetBooleanField as * const _ as usize } , 384usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetBooleanField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetByteField as * const _ as usize } , 388usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetByteField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetCharField as * const _ as usize } , 392usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetCharField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetShortField as * const _ as usize } , 396usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetShortField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetIntField as * const _ as usize } , 400usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetIntField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetLongField as * const _ as usize } , 404usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetLongField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetFloatField as * const _ as usize } , 408usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetFloatField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetDoubleField as * const _ as usize } , 412usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetDoubleField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetObjectField as * const _ as usize } , 416usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetObjectField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetBooleanField as * const _ as usize } , 420usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetBooleanField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetByteField as * const _ as usize } , 424usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetByteField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetCharField as * const _ as usize } , 428usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetCharField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetShortField as * const _ as usize } , 432usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetShortField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetIntField as * const _ as usize } , 436usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetIntField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetLongField as * const _ as usize } , 440usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetLongField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetFloatField as * const _ as usize } , 444usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetFloatField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetDoubleField as * const _ as usize } , 448usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetDoubleField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticMethodID as * const _ as usize } , 452usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticMethodID ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticObjectMethod as * const _ as usize } , 456usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticObjectMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticObjectMethodV as * const _ as usize } , 460usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticObjectMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticObjectMethodA as * const _ as usize } , 464usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticObjectMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticBooleanMethod as * const _ as usize } , 468usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticBooleanMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticBooleanMethodV as * const _ as usize } , 472usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticBooleanMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticBooleanMethodA as * const _ as usize } , 476usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticBooleanMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticByteMethod as * const _ as usize } , 480usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticByteMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticByteMethodV as * const _ as usize } , 484usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticByteMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticByteMethodA as * const _ as usize } , 488usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticByteMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticCharMethod as * const _ as usize } , 492usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticCharMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticCharMethodV as * const _ as usize } , 496usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticCharMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticCharMethodA as * const _ as usize } , 500usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticCharMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticShortMethod as * const _ as usize } , 504usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticShortMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticShortMethodV as * const _ as usize } , 508usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticShortMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticShortMethodA as * const _ as usize } , 512usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticShortMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticIntMethod as * const _ as usize } , 516usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticIntMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticIntMethodV as * const _ as usize } , 520usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticIntMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticIntMethodA as * const _ as usize } , 524usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticIntMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticLongMethod as * const _ as usize } , 528usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticLongMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticLongMethodV as * const _ as usize } , 532usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticLongMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticLongMethodA as * const _ as usize } , 536usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticLongMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticFloatMethod as * const _ as usize } , 540usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticFloatMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticFloatMethodV as * const _ as usize } , 544usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticFloatMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticFloatMethodA as * const _ as usize } , 548usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticFloatMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticDoubleMethod as * const _ as usize } , 552usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticDoubleMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticDoubleMethodV as * const _ as usize } , 556usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticDoubleMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticDoubleMethodA as * const _ as usize } , 560usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticDoubleMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticVoidMethod as * const _ as usize } , 564usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticVoidMethod ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticVoidMethodV as * const _ as usize } , 568usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticVoidMethodV ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . CallStaticVoidMethodA as * const _ as usize } , 572usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( CallStaticVoidMethodA ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticFieldID as * const _ as usize } , 576usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticFieldID ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticObjectField as * const _ as usize } , 580usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticObjectField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticBooleanField as * const _ as usize } , 584usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticBooleanField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticByteField as * const _ as usize } , 588usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticByteField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticCharField as * const _ as usize } , 592usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticCharField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticShortField as * const _ as usize } , 596usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticShortField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticIntField as * const _ as usize } , 600usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticIntField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticLongField as * const _ as usize } , 604usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticLongField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticFloatField as * const _ as usize } , 608usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticFloatField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStaticDoubleField as * const _ as usize } , 612usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStaticDoubleField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticObjectField as * const _ as usize } , 616usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticObjectField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticBooleanField as * const _ as usize } , 620usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticBooleanField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticByteField as * const _ as usize } , 624usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticByteField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticCharField as * const _ as usize } , 628usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticCharField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticShortField as * const _ as usize } , 632usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticShortField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticIntField as * const _ as usize } , 636usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticIntField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticLongField as * const _ as usize } , 640usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticLongField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticFloatField as * const _ as usize } , 644usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticFloatField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetStaticDoubleField as * const _ as usize } , 648usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetStaticDoubleField ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewString as * const _ as usize } , 652usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewString ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringLength as * const _ as usize } , 656usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringLength ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringChars as * const _ as usize } , 660usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringChars ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseStringChars as * const _ as usize } , 664usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseStringChars ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewStringUTF as * const _ as usize } , 668usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewStringUTF ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringUTFLength as * const _ as usize } , 672usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringUTFLength ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringUTFChars as * const _ as usize } , 676usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringUTFChars ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseStringUTFChars as * const _ as usize } , 680usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseStringUTFChars ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetArrayLength as * const _ as usize } , 684usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetArrayLength ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewObjectArray as * const _ as usize } , 688usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewObjectArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetObjectArrayElement as * const _ as usize } , 692usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetObjectArrayElement ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetObjectArrayElement as * const _ as usize } , 696usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetObjectArrayElement ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewBooleanArray as * const _ as usize } , 700usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewBooleanArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewByteArray as * const _ as usize } , 704usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewByteArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewCharArray as * const _ as usize } , 708usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewCharArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewShortArray as * const _ as usize } , 712usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewShortArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewIntArray as * const _ as usize } , 716usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewIntArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewLongArray as * const _ as usize } , 720usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewLongArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewFloatArray as * const _ as usize } , 724usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewFloatArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewDoubleArray as * const _ as usize } , 728usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewDoubleArray ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetBooleanArrayElements as * const _ as usize } , 732usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetBooleanArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetByteArrayElements as * const _ as usize } , 736usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetByteArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetCharArrayElements as * const _ as usize } , 740usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetCharArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetShortArrayElements as * const _ as usize } , 744usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetShortArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetIntArrayElements as * const _ as usize } , 748usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetIntArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetLongArrayElements as * const _ as usize } , 752usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetLongArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetFloatArrayElements as * const _ as usize } , 756usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetFloatArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetDoubleArrayElements as * const _ as usize } , 760usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetDoubleArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseBooleanArrayElements as * const _ as usize } , 764usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseBooleanArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseByteArrayElements as * const _ as usize } , 768usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseByteArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseCharArrayElements as * const _ as usize } , 772usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseCharArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseShortArrayElements as * const _ as usize } , 776usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseShortArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseIntArrayElements as * const _ as usize } , 780usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseIntArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseLongArrayElements as * const _ as usize } , 784usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseLongArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseFloatArrayElements as * const _ as usize } , 788usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseFloatArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseDoubleArrayElements as * const _ as usize } , 792usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseDoubleArrayElements ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetBooleanArrayRegion as * const _ as usize } , 796usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetBooleanArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetByteArrayRegion as * const _ as usize } , 800usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetByteArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetCharArrayRegion as * const _ as usize } , 804usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetCharArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetShortArrayRegion as * const _ as usize } , 808usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetShortArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetIntArrayRegion as * const _ as usize } , 812usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetIntArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetLongArrayRegion as * const _ as usize } , 816usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetLongArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetFloatArrayRegion as * const _ as usize } , 820usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetFloatArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetDoubleArrayRegion as * const _ as usize } , 824usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetDoubleArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetBooleanArrayRegion as * const _ as usize } , 828usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetBooleanArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetByteArrayRegion as * const _ as usize } , 832usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetByteArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetCharArrayRegion as * const _ as usize } , 836usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetCharArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetShortArrayRegion as * const _ as usize } , 840usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetShortArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetIntArrayRegion as * const _ as usize } , 844usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetIntArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetLongArrayRegion as * const _ as usize } , 848usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetLongArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetFloatArrayRegion as * const _ as usize } , 852usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetFloatArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . SetDoubleArrayRegion as * const _ as usize } , 856usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( SetDoubleArrayRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . RegisterNatives as * const _ as usize } , 860usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( RegisterNatives ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . UnregisterNatives as * const _ as usize } , 864usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( UnregisterNatives ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . MonitorEnter as * const _ as usize } , 868usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( MonitorEnter ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . MonitorExit as * const _ as usize } , 872usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( MonitorExit ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetJavaVM as * const _ as usize } , 876usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetJavaVM ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringRegion as * const _ as usize } , 880usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringUTFRegion as * const _ as usize } , 884usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringUTFRegion ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetPrimitiveArrayCritical as * const _ as usize } , 888usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetPrimitiveArrayCritical ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleasePrimitiveArrayCritical as * const _ as usize } , 892usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleasePrimitiveArrayCritical ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetStringCritical as * const _ as usize } , 896usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetStringCritical ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ReleaseStringCritical as * const _ as usize } , 900usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ReleaseStringCritical ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewWeakGlobalRef as * const _ as usize } , 904usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewWeakGlobalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . DeleteWeakGlobalRef as * const _ as usize } , 908usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( DeleteWeakGlobalRef ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . ExceptionCheck as * const _ as usize } , 912usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( ExceptionCheck ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . NewDirectByteBuffer as * const _ as usize } , 916usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( NewDirectByteBuffer ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetDirectBufferAddress as * const _ as usize } , 920usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetDirectBufferAddress ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetDirectBufferCapacity as * const _ as usize } , 924usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetDirectBufferCapacity ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNINativeInterface > ( ) ) ) . GetObjectRefType as * const _ as usize } , 928usize , concat ! ( "Offset of field: " , stringify ! ( JNINativeInterface ) , "::" , stringify ! ( GetObjectRefType ) ) ) ; } impl Clone for JNINativeInterface { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct _JNIEnv { pub functions : * const JNINativeInterface , } # [ test ] fn bindgen_test_layout__JNIEnv ( ) { assert_eq ! ( :: std :: mem :: size_of :: < _JNIEnv > ( ) , 4usize , concat ! ( "Size of: " , stringify ! ( _JNIEnv ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < _JNIEnv > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( _JNIEnv ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _JNIEnv > ( ) ) ) . functions as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( _JNIEnv ) , "::" , stringify ! ( functions ) ) ) ; } impl Clone for _JNIEnv { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JNIInvokeInterface { pub reserved0 : * mut :: std :: os :: raw :: c_void , pub reserved1 : * mut :: std :: os :: raw :: c_void , pub reserved2 : * mut :: std :: os :: raw :: c_void , pub DestroyJavaVM : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JavaVM ) -> jint > , pub AttachCurrentThread : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JavaVM , arg2 : * mut * mut JNIEnv , arg3 : * mut :: std :: os :: raw :: c_void ) -> jint > , pub DetachCurrentThread : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JavaVM ) -> jint > , pub GetEnv : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JavaVM , arg2 : * mut * mut :: std :: os :: raw :: c_void , arg3 : jint ) -> jint > , pub AttachCurrentThreadAsDaemon : :: std :: option :: Option < unsafe extern "C" fn ( arg1 : * mut JavaVM , arg2 : * mut * mut JNIEnv , arg3 : * mut :: std :: os :: raw :: c_void ) -> jint > , } # [ test ] fn bindgen_test_layout_JNIInvokeInterface ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JNIInvokeInterface > ( ) , 32usize , concat ! ( "Size of: " , stringify ! ( JNIInvokeInterface ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JNIInvokeInterface > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JNIInvokeInterface ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . reserved0 as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( reserved0 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . reserved1 as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( reserved1 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . reserved2 as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( reserved2 ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . DestroyJavaVM as * const _ as usize } , 12usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( DestroyJavaVM ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . AttachCurrentThread as * const _ as usize } , 16usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( AttachCurrentThread ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . DetachCurrentThread as * const _ as usize } , 20usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( DetachCurrentThread ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . GetEnv as * const _ as usize } , 24usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( GetEnv ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JNIInvokeInterface > ( ) ) ) . AttachCurrentThreadAsDaemon as * const _ as usize } , 28usize , concat ! ( "Offset of field: " , stringify ! ( JNIInvokeInterface ) , "::" , stringify ! ( AttachCurrentThreadAsDaemon ) ) ) ; } impl Clone for JNIInvokeInterface { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct _JavaVM { pub functions : * const JNIInvokeInterface , } # [ test ] fn bindgen_test_layout__JavaVM ( ) { assert_eq ! ( :: std :: mem :: size_of :: < _JavaVM > ( ) , 4usize , concat ! ( "Size of: " , stringify ! ( _JavaVM ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < _JavaVM > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( _JavaVM ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < _JavaVM > ( ) ) ) . functions as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( _JavaVM ) , "::" , stringify ! ( functions ) ) ) ; } impl Clone for _JavaVM { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JavaVMAttachArgs { pub version : jint , pub name : * const :: std :: os :: raw :: c_char , pub group : jobject , } # [ test ] fn bindgen_test_layout_JavaVMAttachArgs ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JavaVMAttachArgs > ( ) , 12usize , concat ! ( "Size of: " , stringify ! ( JavaVMAttachArgs ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JavaVMAttachArgs > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JavaVMAttachArgs ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMAttachArgs > ( ) ) ) . version as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMAttachArgs ) , "::" , stringify ! ( version ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMAttachArgs > ( ) ) ) . name as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMAttachArgs ) , "::" , stringify ! ( name ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMAttachArgs > ( ) ) ) . group as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMAttachArgs ) , "::" , stringify ! ( group ) ) ) ; } impl Clone for JavaVMAttachArgs { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JavaVMOption { pub optionString : * const :: std :: os :: raw :: c_char , pub extraInfo : * mut :: std :: os :: raw :: c_void , } # [ test ] fn bindgen_test_layout_JavaVMOption ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JavaVMOption > ( ) , 8usize , concat ! ( "Size of: " , stringify ! ( JavaVMOption ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JavaVMOption > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JavaVMOption ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMOption > ( ) ) ) . optionString as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMOption ) , "::" , stringify ! ( optionString ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMOption > ( ) ) ) . extraInfo as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMOption ) , "::" , stringify ! ( extraInfo ) ) ) ; } impl Clone for JavaVMOption { fn clone ( & self ) -> Self { * self } } # [ repr ( C ) ] # [ derive ( Debug , Copy ) ] pub struct JavaVMInitArgs { pub version : jint , pub nOptions : jint , pub options : * mut JavaVMOption , pub ignoreUnrecognized : jboolean , } # [ test ] fn bindgen_test_layout_JavaVMInitArgs ( ) { assert_eq ! ( :: std :: mem :: size_of :: < JavaVMInitArgs > ( ) , 16usize , concat ! ( "Size of: " , stringify ! ( JavaVMInitArgs ) ) ) ; assert_eq ! ( :: std :: mem :: align_of :: < JavaVMInitArgs > ( ) , 4usize , concat ! ( "Alignment of " , stringify ! ( JavaVMInitArgs ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMInitArgs > ( ) ) ) . version as * const _ as usize } , 0usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMInitArgs ) , "::" , stringify ! ( version ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMInitArgs > ( ) ) ) . nOptions as * const _ as usize } , 4usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMInitArgs ) , "::" , stringify ! ( nOptions ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMInitArgs > ( ) ) ) . options as * const _ as usize } , 8usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMInitArgs ) , "::" , stringify ! ( options ) ) ) ; assert_eq ! ( unsafe { & ( * ( :: std :: ptr :: null :: < JavaVMInitArgs > ( ) ) ) . ignoreUnrecognized as * const _ as usize } , 12usize , concat ! ( "Offset of field: " , stringify ! ( JavaVMInitArgs ) , "::" , stringify ! ( ignoreUnrecognized ) ) ) ; } impl Clone for JavaVMInitArgs { fn clone ( & self ) -> Self { * self } } extern "C" { pub fn JNI_GetDefaultJavaVMInitArgs ( arg1 : * mut :: std :: os :: raw :: c_void ) -> jint ; } extern "C" { pub fn JNI_CreateJavaVM ( arg1 : * mut * mut JavaVM , arg2 : * mut * mut JNIEnv , arg3 : * mut :: std :: os :: raw :: c_void ) -> jint ; } extern "C" { pub fn JNI_GetCreatedJavaVMs ( arg1 : * mut * mut JavaVM , arg2 : jsize , arg3 : * mut jsize ) -> jint ; } extern "C" { pub fn JNI_OnLoad ( vm : * mut JavaVM , reserved : * mut :: std :: os :: raw :: c_void ) -> jint ; } extern "C" { pub fn JNI_OnUnload ( vm : * mut JavaVM , reserved : * mut :: std :: os :: raw :: c_void ) ; } pub type __builtin_va_list = * mut :: std :: os :: raw :: c_char ;